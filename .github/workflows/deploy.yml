name: Automatic deployment


on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  changedfiles:
    runs-on: windows
    # Map a step output to a job output
    outputs:
      all: ${{ steps.changes.outputs.all}}
      ts: ${{ steps.changes.outputs.ts }}
    steps:
        # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
           F=$(git log -n 1 origin/test --pretty=format:"%H")
           M=$(git log -n 1 origin/main --pretty=format:"%H")
           echo "$F"
        #echo "::set-output name=sha_short::$(git rev-parse --short ${{ github.event.pull_request.head.sha }})"
        #URL="https://git.build.inter.ikea.com/${{github.repository}}/pull/${{ github.event.pull_request.number }}.patch"
        #echo "$(curl -s -L $URL | git apply --stat -)
        #echo $FILES
        #echo "${{ github.head_ref }}.${{ github.sha }}"
        #echo "[ $default-branch ]"
          
        #echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)"
        #echo "::set-output name=ts::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .*$ | xargs)"
        #echo "::set-output name=ts::git diff-tree -r --no-commit-id --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }}"
        #git diff --name-only $default-branch...${{ github.head_ref }}
        #echo "${git_branch}"
        
      

        
        
          
    
      
    
          
